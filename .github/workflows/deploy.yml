name: Deploy to Laborly Server

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate .env file
        run: |
          cat <<EOF > .env
          APP_NAME=${{ secrets.APP_NAME }}
          DEBUG=${{ secrets.DEBUG }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          ALGORITHM=${{ secrets.ALGORITHM }}
          ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          REDIS_DB=${{ secrets.REDIS_DB }}
          TEST_DATABASE_URL=${{ secrets.TEST_DATABASE_URL }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}#
          MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          MAIL_FROM=${{ secrets.MAIL_FROM }}
          MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }}
          MAIL_SERVER=${{ secrets.MAIL_SERVER }}
          MAIL_PORT=${{ secrets.MAIL_PORT }}
          MAIL_STARTTLS=${{ secrets.MAIL_STARTTLS }}
          MAIL_SSL_TLS=${{ secrets.MAIL_SSL_TLS }}
          MAIL_USE_CREDENTIALS=${{ secrets.MAIL_USE_CREDENTIALS }}
          MAIL_VALIDATE_CERTS=${{ secrets.MAIL_VALIDATE_CERTS }}
          MAIL_TEMPLATE_FOLDER=${{ secrets.MAIL_TEMPLATE_FOLDER }}
          BASE_URL=${{ secrets.BASE_URL }}
          SUPPORT_EMAIL=${{ secrets.SUPPORT_EMAIL }}
          FRONTEND_URL=${{ secrets.FRONTEND_URL }}
          BACKEND_URL=${{ secrets.BACKEND_URL }}
          EMAIL_VERICATION_TOKEN_EXPIRE_MINUTES=${{ secrets.EMAIL_VERICATION_TOKEN_EXPIRE_MINUTES }}
          PASSWORD_RESET_TOKEN_EXPIRE_MINUTES=${{ secrets.PASSWORD_RESET_TOKEN_EXPIRE_MINUTES }}
          NEW_EMAIL_VERICATION_TOKEN_EXPIRE_MINUTES=${{ secrets.NEW_EMAIL_VERICATION_TOKEN_EXPIRE_MINUTES }}
          EOF

      - name: Stop existing containers
        run: docker compose down || true

      - name: Build and start new containers
        run: docker-compose up -d --build

      - name: Run Certbot for SSL (first time only)
        run: docker-compose run --rm certbot || true

      - name: Restart NGINX to apply HTTPS
        run: docker-compose restart nginx