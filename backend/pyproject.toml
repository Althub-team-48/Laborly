# =============================
# üì¶ Project Metadata
# =============================
[project]
name = "laborly-backend"                 # The name of your project
version = "0.1.0"                        # Version of your project
description = "Laborly Backend API"      # Short project description
readme = "README.md"                     # Readme file to include in distribution
requires-python = ">=3.10"               # Minimum Python version supported

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# üîß Required Dependencies
# Install via ‚Äúpip install .‚Äù or ‚Äúuv sync‚Äù
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
dependencies = [
  "aiosmtplib==3.0.2",
  "alembic==1.15.2",
  "annotated-types==0.7.0",
  "anyio==4.9.0",
  "asyncpg==0.30.0",
  "authlib==1.5.2",
  "bcrypt==3.2.2",
  "black==25.1.0",
  "blinker==1.9.0",
  "boto3==1.37.33",
  "botocore==1.37.33",
  "certifi==2025.1.31",
  "cffi==1.17.1",
  "cfgv==3.4.0",
  "click==8.1.8",
  "colorama==0.4.6",
  "colorlog==6.9.0",
  "coverage==7.8.0",
  "cryptography==44.0.2",
  "deprecated==1.2.18",
  "distlib==0.3.9",
  "dnspython==2.7.0",
  "ecdsa==0.19.1",
  "email-validator==2.2.0",
  "faker==37.1.0",
  "fakeredis==2.28.1",
  "fastapi==0.115.12",
  "fastapi-mail==1.4.2",
  "filelock==3.18.0",
  "filetype==1.2.0",
  "greenlet==3.1.1",
  "h11==0.14.0",
  "httpcore==1.0.7",
  "httpx==0.28.1",
  "identify==2.6.10",
  "idna==3.10",
  "iniconfig==2.1.0",
  "itsdangerous==2.2.0",
  "jinja2==3.1.6",
  "jmespath==1.0.1",
  "limits==4.6",
  "mako==1.3.9",
  "markupsafe==3.0.2",
  "mypy==1.15.0",
  "mypy-extensions==1.0.0",
  "nodeenv==1.9.1",
  "packaging==24.2",
  "passlib==1.7.4",
  "pathspec==0.12.1",
  "platformdirs==4.3.7",
  "pluggy==1.5.0",
  "pre-commit==4.2.0",
  "psycopg2-binary==2.9.10",
  "pyasn1==0.4.8",
  "pycparser==2.22",
  "pydantic==2.11.1",
  "pydantic-core==2.33.0",
  "pydantic-settings==2.8.1",
  "pytest==8.3.5",
  "pytest-asyncio==0.26.0",
  "pytest-cov==6.1.1",
  "python-dateutil==2.9.0.post0",
  "python-dotenv==1.1.0",
  "python-jose==3.4.0",
  "python-multipart==0.0.20",
  "pyyaml==6.0.2",
  "redis==5.2.1",
  "rsa==4.9",
  "ruff==0.11.6",
  "s3transfer==0.11.4",
  "sendgrid>=6.11.0",
  "setuptools==79.0.0",
  "six==1.17.0",
  "slowapi==0.1.9",
  "sniffio==1.3.1",
  "sortedcontainers==2.4.0",
  "sqlalchemy==2.0.40",
  "starlette==0.46.1",
  "types-cffi==1.17.0.20250326",
  "types-pyopenssl==24.1.0.20240722",
  "types-python-dateutil==2.9.0.20241206",
  "types-redis==4.6.0.20241004",
  "types-setuptools==78.1.0.20250329",
  "typing-extensions==4.13.0",
  "typing-inspection==0.4.0",
  "tzdata==2025.2",
  "urllib3==2.4.0",
  "uvicorn==0.34.0",
  "virtualenv==20.30.0",
  "websockets==15.0.1",
  "wrapt==1.17.2",
]

# =============================
# üí° Optional Dev Dependencies
# Install with: pip install -e .[dev] or uv add <pkg> && uv sync
# =============================
[project.optional-dependencies]
dev = [
    "ruff>=0.3.0",                       # Linter
    "mypy>=1.10.0",                      # Static type checker
    "black>=24.3.0",                     # Code formatter
    "pre-commit",                        # Git hook manager
    "types-python-dateutil",             # Type stubs
    "types-redis",                       # Type stubs
]

# =============================
# üõ†Ô∏è Build System
# =============================
[build-system]
requires = ["hatchling"]                 # Build backend dependency
build-backend = "hatchling.build"        # Which tool to use to build the project

# =============================
# üßπ Ruff Configuration (Linter)
# =============================
[tool.ruff]
target-version = "py310"                 # Which Python version to target
line-length = 100                        # Max line length

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes (undefined names, etc.)
    "I",   # import sorting
    "B",   # flake8-bugbear (common bugs)
    "C4",  # comprehensions
    "UP",  # pyupgrade fixes
    "ARG"  # unused arguments
]
ignore = [
    "E501",    # long lines (Black handles this)
    "B008",    # function call in default arg
    "B904",    # 'raise from' not enforced
    "W191",    # tabs
    "ARG001",  # unused function args
    "ARG005",  # unused lambda args
    "I001",    # isort disabled (Black handles sorting)
]

[tool.ruff.lint.per-file-ignores]
"alembic/env.py" = ["F401"]              # allow unused imports in migrations
"seed.py" = ["E402"]                     # allow late imports in scripts
"app/core/logging.py" = ["F401"]         # conditional import for logging

[tool.ruff.lint.isort]
known-first-party = ["app"]               # treat our app/ as first‚Äêparty
force-single-line = false

# =============================
# üé® Black Configuration (Formatter)
# =============================
[tool.black]
line-length = 100                        # Max line length
skip-string-normalization = true         # Don't enforce single/double quotes

# =============================
# üß† Mypy Configuration (Type Checker)
# =============================
[tool.mypy]
python_version = "3.10"                  # Python version for type checking
strict = true                            # Enable all strictness flags
check_untyped_defs = true                # Check untyped function definitions
warn_unused_configs = true               # Warn on unused mypy configs
warn_unreachable = true                  # Warn on unreachable code
explicit_package_bases = true            # Use explicit package bases
ignore_missing_imports = true            # Suppress missing imports errors

# =============================
# üì¶ Wheel Build Target
# =============================
[tool.hatch.build.targets.wheel]
packages = ["app"]                       # Include the `app/` package in the wheel
